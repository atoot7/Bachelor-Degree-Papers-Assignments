
--------------------------------------------------------------
-- Database creation Script

-- Auto-Generated by QSEE-SuperLite (c) 2001-2004 QSEE-Technologies Ltd.

-- Verbose generation: ON

-- note: spaces within table/column names have been replaced by underscores (_)

-- Target DB: SQL2

-- Entity Model :Entity Relationship Diagram

-- To drop the tables generated by this script run -
--   'C:\Users\Atut\Desktop\Transport_drop.sql'

--------------------------------------------------------------



--------------------------------------------------------------
-- Table Creation --

-- Each entity on the model is represented by a table that needs to be created within the Database.
-- Within SQL new tables are created using the CREATE TABLE command.
-- When a table is created its name and its attributes are defined.
-- The values of which are derived from those specified on the model.
-- Certain constraints are sometimes also specified, such as identification of primary keys.

-- Create a Database table to represent the "dim_Region" entity.
CREATE TABLE dim_Region(
	RegionId	INTEGER NOT NULL,
	RegionName	VARCHAR(50) NOT NULL,
	-- Specify the PRIMARY KEY constraint for table "dim_Region".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_dim_Region PRIMARY KEY (RegionId)
);

-- Create a Database table to represent the "dim_RoadType" entity.
CREATE TABLE dim_RoadType(
	RoadTypeId	INTEGER NOT NULL,
	RoadTypeName	VARCHAR(20) NOT NULL,
	-- Specify the PRIMARY KEY constraint for table "dim_RoadType".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_dim_RoadType PRIMARY KEY (RoadTypeId)
);

-- Create a Database table to represent the "dim_road" entity.
CREATE TABLE dim_road(
	SKey_road	INTEGER NOT NULL,
	RoadCode	INTEGER NOT NULL,
	RoadName	VARCHAR(20) NOT NULL,
	LinkLength	INTEGER,
	StartJunction	VARCHAR(20),
	EndJunction	VARCHAR(8),
	IsCurrent	BOOLEAN NOT NULL,
	-- Specify the PRIMARY KEY constraint for table "dim_road".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_dim_road PRIMARY KEY (SKey_road)
);

-- Create a Database table to represent the "dim_Time" entity.
CREATE TABLE dim_Time(
	TimeId	INTEGER NOT NULL,
	Year	VARCHAR(8) NOT NULL,
	-- Specify the PRIMARY KEY constraint for table "dim_Time".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_dim_Time PRIMARY KEY (TimeId)
);

-- Create a Database table to represent the "dim_VehicleType" entity.
CREATE TABLE dim_VehicleType(
	VehicleTypeId	INTEGER NOT NULL,
	VehicleTypeName	VARCHAR(20) NOT NULL,
	-- Specify the PRIMARY KEY constraint for table "dim_VehicleType".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_dim_VehicleType PRIMARY KEY (VehicleTypeId)
);

-- Create a Database table to represent the "dim_LocalAuthority" entity.
CREATE TABLE dim_LocalAuthority(
	LocalAuthorityId	INTEGER NOT NULL,
	LocalAuthorityName	VARCHAR(20) NOT NULL,
	-- Specify the PRIMARY KEY constraint for table "dim_LocalAuthority".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_dim_LocalAuthority PRIMARY KEY (LocalAuthorityId)
);

-- Create a Database table to represent the "fact_Transportation" entity.
CREATE TABLE fact_Transportation(
	RegionId	INTEGER,
	TimeId	INTEGER,
	RoadTypeId	INTEGER,
	SKey_road	INTEGER,
	VehicleTypeId	INTEGER,
	LocalAuthorityId	INTEGER,
	TotalLinkLength	INTEGER,
	NumberOfAllVehical	INTEGER,
	NumberOfCars	INTEGER,
	NumberOfPedalCycle	INTEGER,
	NumberOfTaxis	INTEGER,
	NumberOfAllHGVs	INTEGER,
	NumberOfBusCoaches	INTEGER,
	NumberOfLightGoodsVehicle	INTEGER,
	NumberOfV2AxleRigidHGV	INTEGER,
	NumberOfV3AxleRigidHGV	INTEGER,
	NumberOfV4or5AxleRigidHGV	INTEGER,
	NumberOfV3or4AxleArticHGV	INTEGER,
	NumberOfV5AxleArticHGV	INTEGER,
	NumberOfV6orMoreAxleArticHGV	INTEGER,
	NumberOfMotorCycles	INTEGER,
	fk1_RoadTypeId	INTEGER NOT NULL,
	fk2_LocalAuthorityId	INTEGER NOT NULL,
	fk3_TimeId	INTEGER NOT NULL,
	fk4_RegionId	INTEGER NOT NULL,
	fk5_VehicleTypeId	INTEGER NOT NULL,
	fk6_SKey_road	INTEGER NOT NULL
);


--------------------------------------------------------------
-- Alter Tables to add fk constraints --

-- Now all the tables have been created the ALTER TABLE command is used to define some additional
-- constraints.  These typically constrain values of foreign keys to be associated in some way
-- with the primary keys of related tables.  Foreign key constraints can actually be specified
-- when each table is created, but doing so can lead to dependency problems within the script
-- i.e. tables may be referenced before they have been created.  This method is therefore safer.

-- Alter table to add new constraints required to implement the "fact_Transportation_dim_RoadType" relationship

-- This constraint ensures that the foreign key of table "fact_Transportation"
-- correctly references the primary key of table "dim_RoadType"

ALTER TABLE fact_Transportation ADD CONSTRAINT fk1_fact_Transportation_to_dim_RoadType FOREIGN KEY(fk1_RoadTypeId) REFERENCES dim_RoadType(RoadTypeId) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Alter table to add new constraints required to implement the "fact_Transportation_dim_LocalAuthority" relationship

-- This constraint ensures that the foreign key of table "fact_Transportation"
-- correctly references the primary key of table "dim_LocalAuthority"

ALTER TABLE fact_Transportation ADD CONSTRAINT fk2_fact_Transportation_to_dim_LocalAuthority FOREIGN KEY(fk2_LocalAuthorityId) REFERENCES dim_LocalAuthority(LocalAuthorityId) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Alter table to add new constraints required to implement the "fact_Transportation_dim_Time" relationship

-- This constraint ensures that the foreign key of table "fact_Transportation"
-- correctly references the primary key of table "dim_Time"

ALTER TABLE fact_Transportation ADD CONSTRAINT fk3_fact_Transportation_to_dim_Time FOREIGN KEY(fk3_TimeId) REFERENCES dim_Time(TimeId) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Alter table to add new constraints required to implement the "fact_Transportation_dim_Region" relationship

-- This constraint ensures that the foreign key of table "fact_Transportation"
-- correctly references the primary key of table "dim_Region"

ALTER TABLE fact_Transportation ADD CONSTRAINT fk4_fact_Transportation_to_dim_Region FOREIGN KEY(fk4_RegionId) REFERENCES dim_Region(RegionId) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Alter table to add new constraints required to implement the "fact_Transportation_dim_VehicleType" relationship

-- This constraint ensures that the foreign key of table "fact_Transportation"
-- correctly references the primary key of table "dim_VehicleType"

ALTER TABLE fact_Transportation ADD CONSTRAINT fk5_fact_Transportation_to_dim_VehicleType FOREIGN KEY(fk5_VehicleTypeId) REFERENCES dim_VehicleType(VehicleTypeId) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Alter table to add new constraints required to implement the "fact_Transportation_dim_road" relationship

-- This constraint ensures that the foreign key of table "fact_Transportation"
-- correctly references the primary key of table "dim_road"

ALTER TABLE fact_Transportation ADD CONSTRAINT fk6_fact_Transportation_to_dim_road FOREIGN KEY(fk6_SKey_road) REFERENCES dim_road(SKey_road) ON DELETE RESTRICT ON UPDATE RESTRICT;


--------------------------------------------------------------
-- End of DDL file auto-generation
--------------------------------------------------------------
